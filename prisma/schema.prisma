// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Servicios {
  id_Publicacion  Int            @id @default(autoincrement())
  nombre_titular  String
  titulo          String
  descripcion     String
  mail            String
  celular         String
  horario         String
  dia_Semana      String[]
  titulo_Servicio ServicioTitulo

  categoriaId  Int
  id_categoria Categoria @relation(fields: [categoriaId], references: [id])
}

model Actividad {
  id_Publicacion    Int      @id @default(autoincrement())
  fecha_publicacion DateTime
  titulo            String
  contenido         String
  foto              String[]
  horario           String
  dia_Semana        String[]

  id_categoria Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId  Int
}

model EventosNoticia {
  id_Publicacion    Int      @id @default(autoincrement())
  fecha_publicacion DateTime
  titulo            String
  contenido         String
  foto              String
  fecha_evento      DateTime

  id_categoria Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId  Int
}

model Categoria {
  id               Int    @id @default(autoincrement())
  nombre_categoria String

  Servicios      Servicios[]
  Actividad      Actividad[]
  EventosNoticia EventosNoticia[]
  Alquiler       Alquiler[]
  Restaurant     Restaurant[]
}

model Alquiler {
  id_Publicacion     Int      @id @default(autoincrement())
  nombre_titular     String
  celular            String
  mail               String
  titulo             String
  descripcion        String
  ubicacion          String
  coordenadas        String
  capacidad          Int
  camas_dobles       Int
  camas_singles      Int
  agua_caliente      Boolean
  toallas            Boolean
  sabanas            Boolean
  tv                 Boolean
  wifi               Boolean
  piscina            Boolean
  parrilla           Boolean
  bano               Boolean
  cocina             Boolean
  heladera           Boolean
  horno              Boolean
  microondas         Boolean
  alacena            Boolean
  tostadora          Boolean
  aire_acondicionado Boolean
  estufa             Boolean
  frezzer            Boolean
  freeza_Sabanas     Boolean
  mascotas           Boolean
  fotos              String[]

  id_categoria Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId  Int
}

model Restaurant {
  id_Publicacion  Int      @id @default(autoincrement())
  nombre_titular  String
  celular         String
  mail            String
  descripcion     String
  coordenadas     String
  ubicacion       String
  tipo_pago       String[]
  Titulo          String
  horario_semanal String
  horario_finde   String
  domingo         Boolean
  instagram       String
  facebook        String
  web             String

  id_categoria Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId  Int
}

enum ServicioTitulo {
  Trasporte
  Cerrajero
  // Add other titles here
}
